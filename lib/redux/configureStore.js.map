{"version":3,"sources":["../../src/redux/configureStore.js"],"names":[],"mappings":";;;;;kBAQwB,c;;AAJxB;;AACA;;;;AACA;;;;;;AAEe,SAAS,cAAT,GAAqD;AAAA,QAA7B,YAA6B,uEAAd,EAAc;AAAA,QAAV,QAAU;;;AAEhE;AACA,QAAI,cAAc,4BAAgB,oBAAhB,EAAuB,2BAAvB,CAAlB;;AAEA;AACA,QAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,aAAzB,IAA0C,QAAQ,GAAR,CAAY,OAA1D,EAAkE;;AAE9D,YAAM,WAAW,QAAQ,0BAAR,EAAoC,OAArD;;AAEA,sBAAc,oBACV,WADU,EAEV,SAAS,UAAT,EAFU,CAAd;AAIH;;AAED;AACA,WAAO,wBAAY,4BAAgB,QAAhB,CAAZ,EAAuC,YAAvC,EAAqD,WAArD,CAAP;AACH,C,CA1BD","file":"configureStore.js","sourcesContent":["/**\n * Created by lerayne on 09.05.17.\n */\n\nimport {applyMiddleware, createStore, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport promiseMiddleware from './promiseMiddleware'\n\nexport default function configureStore(initialState = {}, reducers) {\n\n    // apply middlewares\n    let middlewares = applyMiddleware(thunk, promiseMiddleware)\n\n    // apply devtools\n    if (process.env.NODE_ENV === 'development' && process.env.BROWSER){\n\n        const DevTools = require('../client/DevTools/index').default\n\n        middlewares = compose(\n            middlewares,\n            DevTools.instrument()\n        )\n    }\n\n    // creates store from root reducer, initial state and middlewares\n    return createStore(combineReducers(reducers), initialState, middlewares)\n}"]}